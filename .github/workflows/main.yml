name: Datamosh Video and Create Release

on:
  push:
    paths:
      - 'videos/*.mp4'
      - 'videos/*.mov'
  workflow_dispatch:
    inputs:
      video_file_path:
        description: '処理する動画ファイルへのパス (例: videos/input.mp4)'
        required: true
        default: 'videos/input.mp4'
      total_glitch_percentage: # 新しい入力パラメータ
        description: '動画データ全体に対して破壊するバイトの割合 (0.0 - 1.0)'
        required: false
        default: '0.1' # デフォルトは10%
      num_glitch_blocks: # 新しい入力パラメータ
        description: '破壊を行うブロックの数 (多いほど破壊が細かくなる)'
        required: false
        default: '100' # デフォルトは100ブロック

permissions:
  contents: write

jobs:
  datamosh:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Get changed video files (for push event)
      id: changed-videos
      if: github.event_name == 'push'
      uses: tj-actions/changed-files@v40
      with:
        files: |
          videos/*.mp4
          videos/*.mov

    - name: Set input variables for processing
      id: set-inputs
      run: |
        INPUT_FILE=""
        TOTAL_GLITCH_PERCENTAGE="${{ github.event.inputs.total_glitch_percentage || '0.1' }}"
        NUM_GLITCH_BLOCKS="${{ github.event.inputs.num_glitch_blocks || '100' }}"

        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          INPUT_FILE="${{ github.event.inputs.video_file_path }}"
        fi

        echo "input_file=$INPUT_FILE" >> $GITHUB_OUTPUT
        echo "total_glitch_percentage=$TOTAL_GLITCH_PERCENTAGE" >> $GITHUB_OUTPUT
        echo "num_glitch_blocks=$NUM_GLITCH_BLOCKS" >> $GITHUB_OUTPUT


    - name: Run datamoshing (Push event)
      if: github.event_name == 'push' && steps.changed-videos.outputs.any_changed == 'true'
      run: |
        echo "Found changed video files: ${{ steps.changed-videos.outputs.changed_files }}"
        for file in ${{ steps.changed-videos.outputs.changed_files }}; do
          echo "Processing $file..."
          INPUT_DIR=$(dirname "$file")
          INPUT_FILENAME=$(basename "$file")
          FILENAME_NO_EXT="${INPUT_FILENAME%.*}"
          OUTPUT_FILENAME="${FILENAME_NO_EXT}_datamoshed.mp4"
          OUTPUT_PATH="${INPUT_DIR}/${OUTPUT_FILENAME}"

          # データモッシングスクリプトを実行
          python datamosh.py "$file" "$OUTPUT_PATH" \
            "${{ steps.set-inputs.outputs.total_glitch_percentage }}" \
            "${{ steps.set-inputs.outputs.num_glitch_blocks }}"
          
          if [ -f "$OUTPUT_PATH" ]; then
            echo "Successfully created $OUTPUT_PATH"
          else
            echo "Failed to create $OUTPUT_PATH"
            exit 1
          fi
        done

    - name: Run datamoshing (Manual workflow_dispatch)
      id: run-manual-datamosh
      if: github.event_name == 'workflow_dispatch'
      run: |
        INPUT_FILE="${{ steps.set-inputs.outputs.input_file }}"
        TOTAL_GLITCH_PERCENTAGE="${{ steps.set-inputs.outputs.total_glitch_percentage }}"
        NUM_GLITCH_BLOCKS="${{ steps.set-inputs.outputs.num_glitch_blocks }}"

        if [[ -z "$INPUT_FILE" ]]; then
          echo "エラー: 'video_file_path' が指定されていません。"
          exit 1
        fi
        if [[ ! -f "$INPUT_FILE" ]]; then
          echo "エラー: 指定されたファイル '$INPUT_FILE' が見つかりません。"
          exit 1
        fi

        INPUT_DIR=$(dirname "$INPUT_FILE")
        INPUT_FILENAME=$(basename "$INPUT_FILE")
        FILENAME_NO_EXT="${INPUT_FILENAME%.*}"
        OUTPUT_FILENAME="${FILENAME_NO_EXT}_datamoshed.mp4"
        OUTPUT_PATH="${INPUT_DIR}/${OUTPUT_FILENAME}"

        echo "Processing $INPUT_FILE..."
        echo "Output will be saved to $OUTPUT_PATH"
        echo "Total Glitch Percentage: $TOTAL_GLITCH_PERCENTAGE"
        echo "Number of Glitch Blocks: $NUM_GLITCH_BLOCKS"

        python datamosh.py "$INPUT_FILE" "$OUTPUT_PATH" "$TOTAL_GLITCH_PERCENTAGE" "$NUM_GLITCH_BLOCKS"

        if [ -f "$OUTPUT_PATH" ]; then
          echo "Successfully created $OUTPUT_PATH"
          echo "output_path=$OUTPUT_PATH" >> $GITHUB_OUTPUT
          echo "output_filename=$OUTPUT_FILENAME" >> $GITHUB_OUTPUT
        else
          echo "Failed to create $OUTPUT_PATH"
          exit 1
        fi

    - name: Create Release and Upload Asset
      if: (github.event_name == 'push' && steps.changed-videos.outputs.any_changed == 'true') || (github.event_name == 'workflow_dispatch' && success())
      id: create_release_and_upload
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: datamoshed-videos-${{ github.run_number }}
        name: Datamoshed Videos ${{ github.run_number }}
        body: |
          自動生成されたデータモッシュ動画。
          
          **トリガーイベント:** ${{ github.event_name }}
          **処理されたファイル:** ${{ github.event_name == 'workflow_dispatch' && steps.run-manual-datamosh.outputs.output_filename || steps.changed-videos.outputs.changed_files }}

        draft: false
        prerelease: false
        files: |
          ${{ github.event_name == 'push' && 'videos/*_datamoshed.mp4' || '' }}
          ${{ github.event_name == 'workflow_dispatch' && steps.run-manual-datamosh.outputs.output_path || '' }}
